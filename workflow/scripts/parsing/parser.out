Grammar:

Rule 0     S' -> phrase
Rule 1     phrase -> gp_num
Rule 2     phrase -> gp_card
Rule 3     phrase -> num
Rule 4     phrase -> ccard
Rule 5     phrase -> pp
Rule 6     phrase -> np
Rule 7     np -> gp
Rule 8     np -> appo
Rule 9     np -> df
Rule 10    np -> NOUN SFX
Rule 11    df -> ART NOUN  [precedence=left, level=2]
Rule 12    pp -> PREP SFX
Rule 13    pp -> PREP ADVB
Rule 14    pp -> PREP NOUN  [precedence=left, level=2]
Rule 15    pp -> PREP phrase
Rule 16    gp -> NOUN C np
Rule 17    gp -> NOUN C NOUN  [precedence=left, level=2]
Rule 18    gp_card -> NOUN C num
Rule 19    gp_num -> NOUN C CARD  [precedence=left, level=2]
Rule 20    appo -> df df
Rule 21    appo -> NOUN NOUN  [precedence=left, level=2]
Rule 22    ccard -> ccard CARD  [precedence=left, level=2]
Rule 23    ccard -> CARD CONJ ccard  [precedence=left, level=1]
Rule 24    ccard -> ccard CONJ ccard  [precedence=left, level=1]
Rule 25    ccard -> CARD CONJ CARD  [precedence=left, level=2]
Rule 26    ccard -> CARD CARD  [precedence=left, level=2]
Rule 27    num -> np CARD  [precedence=left, level=2]
Rule 28    num -> CARD np  [precedence=left, level=2]
Rule 29    num -> ccard np
Rule 30    num -> ccard NOUN  [precedence=left, level=2]
Rule 31    num -> CARD NOUN  [precedence=left, level=2]
Rule 32    num -> NOUN CARD  [precedence=left, level=2]

Terminals, with rules where they appear:

ADVB                 : 13
ART                  : 11
C                    : 16 17 18 19
CARD                 : 19 22 23 25 25 26 26 27 28 31 32
CONJ                 : 23 24 25
NOUN                 : 10 11 14 16 17 17 18 19 21 21 30 31 32
PREP                 : 12 13 14 15
SFX                  : 10 12
error                : 

Nonterminals, with rules where they appear:

appo                 : 8
ccard                : 4 22 23 24 24 29 30
df                   : 9 20 20
gp                   : 7
gp_card              : 2
gp_num               : 1
np                   : 6 16 27 28 29
num                  : 3 18
phrase               : 15 0
pp                   : 5


state 0

    (0) S' -> . phrase
    (1) phrase -> . gp_num
    (2) phrase -> . gp_card
    (3) phrase -> . num
    (4) phrase -> . ccard
    (5) phrase -> . pp
    (6) phrase -> . np
    (19) gp_num -> . NOUN C CARD
    (18) gp_card -> . NOUN C num
    (27) num -> . np CARD
    (28) num -> . CARD np
    (29) num -> . ccard np
    (30) num -> . ccard NOUN
    (31) num -> . CARD NOUN
    (32) num -> . NOUN CARD
    (22) ccard -> . ccard CARD
    (23) ccard -> . CARD CONJ ccard
    (24) ccard -> . ccard CONJ ccard
    (25) ccard -> . CARD CONJ CARD
    (26) ccard -> . CARD CARD
    (12) pp -> . PREP SFX
    (13) pp -> . PREP ADVB
    (14) pp -> . PREP NOUN
    (15) pp -> . PREP phrase
    (7) np -> . gp
    (8) np -> . appo
    (9) np -> . df
    (10) np -> . NOUN SFX
    (16) gp -> . NOUN C np
    (17) gp -> . NOUN C NOUN
    (20) appo -> . df df
    (21) appo -> . NOUN NOUN
    (11) df -> . ART NOUN
    NOUN            shift and go to state 8
    CARD            shift and go to state 9
    PREP            shift and go to state 10
    ART             shift and go to state 14

    phrase                         shift and go to state 1
    gp_num                         shift and go to state 2
    gp_card                        shift and go to state 3
    num                            shift and go to state 4
    ccard                          shift and go to state 5
    pp                             shift and go to state 6
    np                             shift and go to state 7
    gp                             shift and go to state 11
    appo                           shift and go to state 12
    df                             shift and go to state 13

state 1

    (0) S' -> phrase .


state 2

    (1) phrase -> gp_num .
    $end            reduce using rule 1 (phrase -> gp_num .)


state 3

    (2) phrase -> gp_card .
    $end            reduce using rule 2 (phrase -> gp_card .)


state 4

    (3) phrase -> num .
    $end            reduce using rule 3 (phrase -> num .)


state 5

    (4) phrase -> ccard .
    (29) num -> ccard . np
    (30) num -> ccard . NOUN
    (22) ccard -> ccard . CARD
    (24) ccard -> ccard . CONJ ccard
    (7) np -> . gp
    (8) np -> . appo
    (9) np -> . df
    (10) np -> . NOUN SFX
    (16) gp -> . NOUN C np
    (17) gp -> . NOUN C NOUN
    (20) appo -> . df df
    (21) appo -> . NOUN NOUN
    (11) df -> . ART NOUN
    $end            reduce using rule 4 (phrase -> ccard .)
    NOUN            shift and go to state 16
    CARD            shift and go to state 17
    CONJ            shift and go to state 18
    ART             shift and go to state 14

    np                             shift and go to state 15
    gp                             shift and go to state 11
    appo                           shift and go to state 12
    df                             shift and go to state 13

state 6

    (5) phrase -> pp .
    $end            reduce using rule 5 (phrase -> pp .)


state 7

    (6) phrase -> np .
    (27) num -> np . CARD
    $end            reduce using rule 6 (phrase -> np .)
    CARD            shift and go to state 19


state 8

    (19) gp_num -> NOUN . C CARD
    (18) gp_card -> NOUN . C num
    (32) num -> NOUN . CARD
    (10) np -> NOUN . SFX
    (16) gp -> NOUN . C np
    (17) gp -> NOUN . C NOUN
    (21) appo -> NOUN . NOUN
    C               shift and go to state 21
    CARD            shift and go to state 22
    SFX             shift and go to state 23
    NOUN            shift and go to state 20


state 9

    (28) num -> CARD . np
    (31) num -> CARD . NOUN
    (23) ccard -> CARD . CONJ ccard
    (25) ccard -> CARD . CONJ CARD
    (26) ccard -> CARD . CARD
    (7) np -> . gp
    (8) np -> . appo
    (9) np -> . df
    (10) np -> . NOUN SFX
    (16) gp -> . NOUN C np
    (17) gp -> . NOUN C NOUN
    (20) appo -> . df df
    (21) appo -> . NOUN NOUN
    (11) df -> . ART NOUN
    NOUN            shift and go to state 26
    CONJ            shift and go to state 27
    CARD            shift and go to state 24
    ART             shift and go to state 14

    np                             shift and go to state 25
    gp                             shift and go to state 11
    appo                           shift and go to state 12
    df                             shift and go to state 13

state 10

    (12) pp -> PREP . SFX
    (13) pp -> PREP . ADVB
    (14) pp -> PREP . NOUN
    (15) pp -> PREP . phrase
    (1) phrase -> . gp_num
    (2) phrase -> . gp_card
    (3) phrase -> . num
    (4) phrase -> . ccard
    (5) phrase -> . pp
    (6) phrase -> . np
    (19) gp_num -> . NOUN C CARD
    (18) gp_card -> . NOUN C num
    (27) num -> . np CARD
    (28) num -> . CARD np
    (29) num -> . ccard np
    (30) num -> . ccard NOUN
    (31) num -> . CARD NOUN
    (32) num -> . NOUN CARD
    (22) ccard -> . ccard CARD
    (23) ccard -> . CARD CONJ ccard
    (24) ccard -> . ccard CONJ ccard
    (25) ccard -> . CARD CONJ CARD
    (26) ccard -> . CARD CARD
    (12) pp -> . PREP SFX
    (13) pp -> . PREP ADVB
    (14) pp -> . PREP NOUN
    (15) pp -> . PREP phrase
    (7) np -> . gp
    (8) np -> . appo
    (9) np -> . df
    (10) np -> . NOUN SFX
    (16) gp -> . NOUN C np
    (17) gp -> . NOUN C NOUN
    (20) appo -> . df df
    (21) appo -> . NOUN NOUN
    (11) df -> . ART NOUN
    SFX             shift and go to state 28
    ADVB            shift and go to state 29
    NOUN            shift and go to state 30
    CARD            shift and go to state 9
    PREP            shift and go to state 10
    ART             shift and go to state 14

    phrase                         shift and go to state 31
    gp_num                         shift and go to state 2
    gp_card                        shift and go to state 3
    num                            shift and go to state 4
    ccard                          shift and go to state 5
    pp                             shift and go to state 6
    np                             shift and go to state 7
    gp                             shift and go to state 11
    appo                           shift and go to state 12
    df                             shift and go to state 13

state 11

    (7) np -> gp .
    CARD            reduce using rule 7 (np -> gp .)
    $end            reduce using rule 7 (np -> gp .)


state 12

    (8) np -> appo .
    CARD            reduce using rule 8 (np -> appo .)
    $end            reduce using rule 8 (np -> appo .)


state 13

    (9) np -> df .
    (20) appo -> df . df
    (11) df -> . ART NOUN
    CARD            reduce using rule 9 (np -> df .)
    $end            reduce using rule 9 (np -> df .)
    ART             shift and go to state 14

    df                             shift and go to state 32

state 14

    (11) df -> ART . NOUN
    NOUN            shift and go to state 33


state 15

    (29) num -> ccard np .
    $end            reduce using rule 29 (num -> ccard np .)


state 16

    (30) num -> ccard NOUN .
    (10) np -> NOUN . SFX
    (16) gp -> NOUN . C np
    (17) gp -> NOUN . C NOUN
    (21) appo -> NOUN . NOUN
    $end            reduce using rule 30 (num -> ccard NOUN .)
    SFX             shift and go to state 23
    C               shift and go to state 34
    NOUN            shift and go to state 20


state 17

    (22) ccard -> ccard CARD .
    NOUN            reduce using rule 22 (ccard -> ccard CARD .)
    CARD            reduce using rule 22 (ccard -> ccard CARD .)
    CONJ            reduce using rule 22 (ccard -> ccard CARD .)
    ART             reduce using rule 22 (ccard -> ccard CARD .)
    $end            reduce using rule 22 (ccard -> ccard CARD .)


state 18

    (24) ccard -> ccard CONJ . ccard
    (22) ccard -> . ccard CARD
    (23) ccard -> . CARD CONJ ccard
    (24) ccard -> . ccard CONJ ccard
    (25) ccard -> . CARD CONJ CARD
    (26) ccard -> . CARD CARD
    CARD            shift and go to state 36

    ccard                          shift and go to state 35

state 19

    (27) num -> np CARD .
    $end            reduce using rule 27 (num -> np CARD .)


state 20

    (21) appo -> NOUN NOUN .
    CARD            reduce using rule 21 (appo -> NOUN NOUN .)
    $end            reduce using rule 21 (appo -> NOUN NOUN .)


state 21

    (19) gp_num -> NOUN C . CARD
    (18) gp_card -> NOUN C . num
    (16) gp -> NOUN C . np
    (17) gp -> NOUN C . NOUN
    (27) num -> . np CARD
    (28) num -> . CARD np
    (29) num -> . ccard np
    (30) num -> . ccard NOUN
    (31) num -> . CARD NOUN
    (32) num -> . NOUN CARD
    (7) np -> . gp
    (8) np -> . appo
    (9) np -> . df
    (10) np -> . NOUN SFX
    (22) ccard -> . ccard CARD
    (23) ccard -> . CARD CONJ ccard
    (24) ccard -> . ccard CONJ ccard
    (25) ccard -> . CARD CONJ CARD
    (26) ccard -> . CARD CARD
    (16) gp -> . NOUN C np
    (17) gp -> . NOUN C NOUN
    (20) appo -> . df df
    (21) appo -> . NOUN NOUN
    (11) df -> . ART NOUN
    CARD            shift and go to state 38
    NOUN            shift and go to state 37
    ART             shift and go to state 14

    num                            shift and go to state 39
    np                             shift and go to state 40
    ccard                          shift and go to state 41
    gp                             shift and go to state 11
    appo                           shift and go to state 12
    df                             shift and go to state 13

state 22

    (32) num -> NOUN CARD .
    $end            reduce using rule 32 (num -> NOUN CARD .)


state 23

    (10) np -> NOUN SFX .
    CARD            reduce using rule 10 (np -> NOUN SFX .)
    $end            reduce using rule 10 (np -> NOUN SFX .)


state 24

    (26) ccard -> CARD CARD .
    NOUN            reduce using rule 26 (ccard -> CARD CARD .)
    CARD            reduce using rule 26 (ccard -> CARD CARD .)
    CONJ            reduce using rule 26 (ccard -> CARD CARD .)
    ART             reduce using rule 26 (ccard -> CARD CARD .)
    $end            reduce using rule 26 (ccard -> CARD CARD .)


state 25

    (28) num -> CARD np .
    $end            reduce using rule 28 (num -> CARD np .)


state 26

    (31) num -> CARD NOUN .
    (10) np -> NOUN . SFX
    (16) gp -> NOUN . C np
    (17) gp -> NOUN . C NOUN
    (21) appo -> NOUN . NOUN
    $end            reduce using rule 31 (num -> CARD NOUN .)
    SFX             shift and go to state 23
    C               shift and go to state 34
    NOUN            shift and go to state 20


state 27

    (23) ccard -> CARD CONJ . ccard
    (25) ccard -> CARD CONJ . CARD
    (22) ccard -> . ccard CARD
    (23) ccard -> . CARD CONJ ccard
    (24) ccard -> . ccard CONJ ccard
    (25) ccard -> . CARD CONJ CARD
    (26) ccard -> . CARD CARD
    CARD            shift and go to state 42

    ccard                          shift and go to state 43

state 28

    (12) pp -> PREP SFX .
    $end            reduce using rule 12 (pp -> PREP SFX .)


state 29

    (13) pp -> PREP ADVB .
    $end            reduce using rule 13 (pp -> PREP ADVB .)


state 30

    (14) pp -> PREP NOUN .
    (19) gp_num -> NOUN . C CARD
    (18) gp_card -> NOUN . C num
    (32) num -> NOUN . CARD
    (10) np -> NOUN . SFX
    (16) gp -> NOUN . C np
    (17) gp -> NOUN . C NOUN
    (21) appo -> NOUN . NOUN
    $end            reduce using rule 14 (pp -> PREP NOUN .)
    C               shift and go to state 21
    CARD            shift and go to state 22
    SFX             shift and go to state 23
    NOUN            shift and go to state 20


state 31

    (15) pp -> PREP phrase .
    $end            reduce using rule 15 (pp -> PREP phrase .)


state 32

    (20) appo -> df df .
    CARD            reduce using rule 20 (appo -> df df .)
    $end            reduce using rule 20 (appo -> df df .)


state 33

    (11) df -> ART NOUN .
    ART             reduce using rule 11 (df -> ART NOUN .)
    CARD            reduce using rule 11 (df -> ART NOUN .)
    $end            reduce using rule 11 (df -> ART NOUN .)


state 34

    (16) gp -> NOUN C . np
    (17) gp -> NOUN C . NOUN
    (7) np -> . gp
    (8) np -> . appo
    (9) np -> . df
    (10) np -> . NOUN SFX
    (16) gp -> . NOUN C np
    (17) gp -> . NOUN C NOUN
    (20) appo -> . df df
    (21) appo -> . NOUN NOUN
    (11) df -> . ART NOUN
    NOUN            shift and go to state 44
    ART             shift and go to state 14

    np                             shift and go to state 45
    gp                             shift and go to state 11
    appo                           shift and go to state 12
    df                             shift and go to state 13

state 35

    (24) ccard -> ccard CONJ ccard .
    (22) ccard -> ccard . CARD
    (24) ccard -> ccard . CONJ ccard
    NOUN            reduce using rule 24 (ccard -> ccard CONJ ccard .)
    CONJ            reduce using rule 24 (ccard -> ccard CONJ ccard .)
    ART             reduce using rule 24 (ccard -> ccard CONJ ccard .)
    $end            reduce using rule 24 (ccard -> ccard CONJ ccard .)
    CARD            shift and go to state 17


state 36

    (23) ccard -> CARD . CONJ ccard
    (25) ccard -> CARD . CONJ CARD
    (26) ccard -> CARD . CARD
    CONJ            shift and go to state 27
    CARD            shift and go to state 24


state 37

    (17) gp -> NOUN C NOUN .
    (32) num -> NOUN . CARD
    (10) np -> NOUN . SFX
    (16) gp -> NOUN . C np
    (17) gp -> NOUN . C NOUN
    (21) appo -> NOUN . NOUN
    CARD            reduce using rule 17 (gp -> NOUN C NOUN .)
    $end            reduce using rule 17 (gp -> NOUN C NOUN .)
    SFX             shift and go to state 23
    C               shift and go to state 34
    NOUN            shift and go to state 20


state 38

    (19) gp_num -> NOUN C CARD .
    (28) num -> CARD . np
    (31) num -> CARD . NOUN
    (23) ccard -> CARD . CONJ ccard
    (25) ccard -> CARD . CONJ CARD
    (26) ccard -> CARD . CARD
    (7) np -> . gp
    (8) np -> . appo
    (9) np -> . df
    (10) np -> . NOUN SFX
    (16) gp -> . NOUN C np
    (17) gp -> . NOUN C NOUN
    (20) appo -> . df df
    (21) appo -> . NOUN NOUN
    (11) df -> . ART NOUN
    $end            reduce using rule 19 (gp_num -> NOUN C CARD .)
    NOUN            shift and go to state 26
    CONJ            shift and go to state 27
    CARD            shift and go to state 24
    ART             shift and go to state 14

    np                             shift and go to state 25
    gp                             shift and go to state 11
    appo                           shift and go to state 12
    df                             shift and go to state 13

state 39

    (18) gp_card -> NOUN C num .
    $end            reduce using rule 18 (gp_card -> NOUN C num .)


state 40

    (16) gp -> NOUN C np .
    (27) num -> np . CARD
  ! shift/reduce conflict for CARD resolved as shift
    $end            reduce using rule 16 (gp -> NOUN C np .)
    CARD            shift and go to state 19


state 41

    (29) num -> ccard . np
    (30) num -> ccard . NOUN
    (22) ccard -> ccard . CARD
    (24) ccard -> ccard . CONJ ccard
    (7) np -> . gp
    (8) np -> . appo
    (9) np -> . df
    (10) np -> . NOUN SFX
    (16) gp -> . NOUN C np
    (17) gp -> . NOUN C NOUN
    (20) appo -> . df df
    (21) appo -> . NOUN NOUN
    (11) df -> . ART NOUN
    NOUN            shift and go to state 16
    CARD            shift and go to state 17
    CONJ            shift and go to state 18
    ART             shift and go to state 14

    np                             shift and go to state 15
    gp                             shift and go to state 11
    appo                           shift and go to state 12
    df                             shift and go to state 13

state 42

    (25) ccard -> CARD CONJ CARD .
    (23) ccard -> CARD . CONJ ccard
    (25) ccard -> CARD . CONJ CARD
    (26) ccard -> CARD . CARD
    NOUN            reduce using rule 25 (ccard -> CARD CONJ CARD .)
    CARD            reduce using rule 25 (ccard -> CARD CONJ CARD .)
    CONJ            reduce using rule 25 (ccard -> CARD CONJ CARD .)
    ART             reduce using rule 25 (ccard -> CARD CONJ CARD .)
    $end            reduce using rule 25 (ccard -> CARD CONJ CARD .)


state 43

    (23) ccard -> CARD CONJ ccard .
    (22) ccard -> ccard . CARD
    (24) ccard -> ccard . CONJ ccard
    NOUN            reduce using rule 23 (ccard -> CARD CONJ ccard .)
    CONJ            reduce using rule 23 (ccard -> CARD CONJ ccard .)
    ART             reduce using rule 23 (ccard -> CARD CONJ ccard .)
    $end            reduce using rule 23 (ccard -> CARD CONJ ccard .)
    CARD            shift and go to state 17


state 44

    (17) gp -> NOUN C NOUN .
    (10) np -> NOUN . SFX
    (16) gp -> NOUN . C np
    (17) gp -> NOUN . C NOUN
    (21) appo -> NOUN . NOUN
    $end            reduce using rule 17 (gp -> NOUN C NOUN .)
    CARD            reduce using rule 17 (gp -> NOUN C NOUN .)
    SFX             shift and go to state 23
    C               shift and go to state 34
    NOUN            shift and go to state 20


state 45

    (16) gp -> NOUN C np .
    $end            reduce using rule 16 (gp -> NOUN C np .)
    CARD            reduce using rule 16 (gp -> NOUN C np .)


Conflicts:

shift/reduce conflict for CARD in state 40 resolved as shift