Grammar:

Rule 0     S' -> phrase
Rule 1     phrase -> pr
Rule 2     phrase -> pp
Rule 3     pp -> P
Rule 4     pr -> P

Unused terminals:

    N

Terminals, with rules where they appear:

N                    : 
P                    : 3 4
error                : 

Nonterminals, with rules where they appear:

phrase               : 0
pp                   : 2
pr                   : 1


state 0

    (0) S' -> . phrase
    (1) phrase -> . pr
    (2) phrase -> . pp
    (4) pr -> . P
    (3) pp -> . P
    P               shift and go to state 4

    phrase                         shift and go to state 1
    pr                             shift and go to state 2
    pp                             shift and go to state 3

state 1

    (0) S' -> phrase .


state 2

    (1) phrase -> pr .
    $end            reduce using rule 1 (phrase -> pr .)


state 3

    (2) phrase -> pp .
    $end            reduce using rule 2 (phrase -> pp .)


state 4

    (4) pr -> P .
    (3) pp -> P .
  ! reduce/reduce conflict for $end resolved using rule 3 (pp -> P .)
    $end            reduce using rule 3 (pp -> P .)


Conflicts:

reduce/reduce conflict in state 4 resolved using rule pp -> P
rejected rule (pr -> P) in state 4
Rule (pr -> P) is never reduced